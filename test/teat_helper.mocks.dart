// Mocks generated by Mockito 5.4.2 from annotations
// in islamic_online_learning/test/teat_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:islamic_online_learning/core/failure.dart' as _i8;
import 'package:islamic_online_learning/features/main/data/main_data_src.dart'
    as _i3;
import 'package:islamic_online_learning/features/main/data/model/course_model.dart'
    as _i5;
import 'package:islamic_online_learning/features/main/data/model/faq_model.dart'
    as _i6;
import 'package:islamic_online_learning/features/main/domain/main_repo.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MainDataSrc].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainDataSrc extends _i1.Mock implements _i3.MainDataSrc {
  MockMainDataSrc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.CourseModel>> getCourses(
    bool? isNew,
    String? key,
    String? val,
    _i3.SortingMethod? method,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourses,
          [
            isNew,
            key,
            val,
            method,
          ],
        ),
        returnValue:
            _i4.Future<List<_i5.CourseModel>>.value(<_i5.CourseModel>[]),
      ) as _i4.Future<List<_i5.CourseModel>>);

  @override
  _i4.Future<List<_i5.CourseModel>> getFavoriteCourses() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteCourses,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.CourseModel>>.value(<_i5.CourseModel>[]),
      ) as _i4.Future<List<_i5.CourseModel>>);

  @override
  _i4.Future<List<_i5.CourseModel>> getStartedCourses() => (super.noSuchMethod(
        Invocation.method(
          #getStartedCourses,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.CourseModel>>.value(<_i5.CourseModel>[]),
      ) as _i4.Future<List<_i5.CourseModel>>);

  @override
  _i4.Future<List<_i5.CourseModel>> getSavedCourses() => (super.noSuchMethod(
        Invocation.method(
          #getSavedCourses,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.CourseModel>>.value(<_i5.CourseModel>[]),
      ) as _i4.Future<List<_i5.CourseModel>>);

  @override
  _i4.Future<_i5.CourseModel?> getSingleCourse(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleCourse,
          [courseId],
        ),
        returnValue: _i4.Future<_i5.CourseModel?>.value(),
      ) as _i4.Future<_i5.CourseModel?>);

  @override
  _i4.Future<List<_i6.FAQModel>> getFAQ() => (super.noSuchMethod(
        Invocation.method(
          #getFAQ,
          [],
        ),
        returnValue: _i4.Future<List<_i6.FAQModel>>.value(<_i6.FAQModel>[]),
      ) as _i4.Future<List<_i6.FAQModel>>);

  @override
  _i4.Future<int> saveTheCourse(_i5.CourseModel? courseModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTheCourse,
          [courseModel],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<String>> getUstazs() => (super.noSuchMethod(
        Invocation.method(
          #getUstazs,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<String>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<_i5.CourseModel>> searchCourses(
    String? query,
    int? numOfelt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourses,
          [
            query,
            numOfelt,
          ],
        ),
        returnValue:
            _i4.Future<List<_i5.CourseModel>>.value(<_i5.CourseModel>[]),
      ) as _i4.Future<List<_i5.CourseModel>>);

  @override
  _i4.Future<void> deleteCourse(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCourse,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [MainRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainRepo extends _i1.Mock implements _i7.MainRepo {
  MockMainRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>> getCourses(
    bool? isNew,
    String? key,
    String? val,
    _i3.SortingMethod? method,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourses,
          [
            isNew,
            key,
            val,
            method,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i5.CourseModel>>(
          this,
          Invocation.method(
            #getCourses,
            [
              isNew,
              key,
              val,
              method,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>
      getCoursesHistory() => (super.noSuchMethod(
            Invocation.method(
              #getCoursesHistory,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i5.CourseModel>>(
              this,
              Invocation.method(
                #getCoursesHistory,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>
      getFavoriteCourses() => (super.noSuchMethod(
            Invocation.method(
              #getFavoriteCourses,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i5.CourseModel>>(
              this,
              Invocation.method(
                #getFavoriteCourses,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>
      getDownloadedCourses() => (super.noSuchMethod(
            Invocation.method(
              #getDownloadedCourses,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i5.CourseModel>>(
              this,
              Invocation.method(
                #getDownloadedCourses,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, _i5.CourseModel?>> getSingleCourse(
          String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleCourse,
          [courseId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i8.Failure, _i5.CourseModel?>>.value(
                _FakeEither_0<_i8.Failure, _i5.CourseModel?>(
          this,
          Invocation.method(
            #getSingleCourse,
            [courseId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, _i5.CourseModel?>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<String>>> getUstazs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUstazs,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, List<String>>>.value(
            _FakeEither_0<_i8.Failure, List<String>>(
          this,
          Invocation.method(
            #getUstazs,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<String>>> getCategories() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, List<String>>>.value(
            _FakeEither_0<_i8.Failure, List<String>>(
          this,
          Invocation.method(
            #getCategories,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<String>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i6.FAQModel>>> getFAQ() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFAQ,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i8.Failure, List<_i6.FAQModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i6.FAQModel>>(
          this,
          Invocation.method(
            #getFAQ,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<_i6.FAQModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>> searchCourses(
    String? query,
    int? numOfElt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourses,
          [
            query,
            numOfElt,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>.value(
                _FakeEither_0<_i8.Failure, List<_i5.CourseModel>>(
          this,
          Invocation.method(
            #searchCourses,
            [
              query,
              numOfElt,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, List<_i5.CourseModel>>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, int>> saveCourse(
          _i5.CourseModel? courseModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCourse,
          [courseModel],
        ),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, int>>.value(
            _FakeEither_0<_i8.Failure, int>(
          this,
          Invocation.method(
            #saveCourse,
            [courseModel],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i8.Failure, void>> deleteCourse(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCourse,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i8.Failure, void>>.value(
            _FakeEither_0<_i8.Failure, void>(
          this,
          Invocation.method(
            #deleteCourse,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i8.Failure, void>>);
}
